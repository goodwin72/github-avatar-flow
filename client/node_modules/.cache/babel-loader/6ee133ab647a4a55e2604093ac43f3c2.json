{"ast":null,"code":"import _createClass from \"C:\\\\Users\\\\Jared\\\\Documents\\\\Web\\\\GitHub Avatar Flow\\\\github-avatar-flow\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\Users\\\\Jared\\\\Documents\\\\Web\\\\GitHub Avatar Flow\\\\github-avatar-flow\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\Users\\\\Jared\\\\Documents\\\\Web\\\\GitHub Avatar Flow\\\\github-avatar-flow\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\Users\\\\Jared\\\\Documents\\\\Web\\\\GitHub Avatar Flow\\\\github-avatar-flow\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nimport _classCallCheck from \"C:\\\\Users\\\\Jared\\\\Documents\\\\Web\\\\GitHub Avatar Flow\\\\github-avatar-flow\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nvar _jsxFileName = \"C:\\\\Users\\\\Jared\\\\Documents\\\\Web\\\\GitHub Avatar Flow\\\\github-avatar-flow\\\\client\\\\src\\\\AvatarList.js\";\nimport React, { Component } from 'react';\nimport './styles/AvatarList.css';\nvar STARTING_REPO = 999;\n\nvar User = function User(username, id, avatarURL, followersURL) {\n  _classCallCheck(this, User);\n\n  this.username = username;\n  this.id = id;\n  this.avatarURL = avatarURL;\n  this.followersURL = followersURL;\n  /* Set explicitly to 'undefined' because we don't know whether they do or don't exist\n   * for this user yet. */\n\n  this.followers = undefined;\n};\n\nvar AvatarList =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(AvatarList, _Component);\n\n  function AvatarList(props) {\n    var _this;\n\n    _classCallCheck(this, AvatarList);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(AvatarList).call(this, props));\n    _this.state = {\n      'users': []\n    };\n    return _this;\n  }\n\n  _createClass(AvatarList, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      fetch(\"http://localhost:3000/repos?since=\".concat(STARTING_REPO)).then(function (response) {\n        return response.json();\n      }).then(function (response) {\n        // console.log(response);\n        var newUsers = JSON.parse(JSON.stringify(response)).map(function (value) {\n          return new User(value.username, value.id, value.avatarURL, value.followers);\n        });\n\n        _this2.setState({\n          'users': newUsers\n        });\n      }) // .bind(this))\n      .catch(function (error) {\n        console.log(error);\n        return Promise.reject(error);\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var avatars = this.state.users.map(function (value) {\n        return React.createElement(\"li\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 52\n          },\n          __self: this\n        }, value.id);\n      });\n      return React.createElement(\"div\", {\n        className: \"avatarList\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57\n        },\n        __self: this\n      }, \"AvatarList\"), React.createElement(\"ul\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58\n        },\n        __self: this\n      }, avatars));\n    }\n  }]);\n\n  return AvatarList;\n}(Component);\n\nexport default AvatarList;","map":{"version":3,"sources":["C:\\Users\\Jared\\Documents\\Web\\GitHub Avatar Flow\\github-avatar-flow\\client\\src\\AvatarList.js"],"names":["React","Component","STARTING_REPO","User","username","id","avatarURL","followersURL","followers","undefined","AvatarList","props","state","fetch","then","response","json","newUsers","JSON","parse","stringify","map","value","setState","catch","error","console","log","Promise","reject","avatars","users"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAO,yBAAP;AAEA,IAAMC,aAAa,GAAG,GAAtB;;IAEMC,I,GACJ,cAAYC,QAAZ,EAAsBC,EAAtB,EAA0BC,SAA1B,EAAqCC,YAArC,EAAmD;AAAA;;AACjD,OAAKH,QAAL,GAAgBA,QAAhB;AACA,OAAKC,EAAL,GAAUA,EAAV;AACA,OAAKC,SAAL,GAAiBA,SAAjB;AACA,OAAKC,YAAL,GAAoBA,YAApB;AAEA;;;AAEA,OAAKC,SAAL,GAAiBC,SAAjB;AACD,C;;IAGGC,U;;;;;AACJ,sBAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACjB,oFAAMA,KAAN;AAEA,UAAKC,KAAL,GAAa;AACX,eAAS;AADE,KAAb;AAHiB;AAMlB;;;;wCAEmB;AAAA;;AAClBC,MAAAA,KAAK,6CAAsCX,aAAtC,EAAL,CACGY,IADH,CACQ,UAACC,QAAD,EAAc;AAClB,eAAOA,QAAQ,CAACC,IAAT,EAAP;AACD,OAHH,EAIGF,IAJH,CAIQ,UAACC,QAAD,EAAc;AAClB;AACA,YAAIE,QAAQ,GAAGC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,SAAL,CAAeL,QAAf,CAAX,EAAqCM,GAArC,CAAyC,UAACC,KAAD,EAAW;AACjE,iBAAO,IAAInB,IAAJ,CAASmB,KAAK,CAAClB,QAAf,EAAyBkB,KAAK,CAACjB,EAA/B,EAAmCiB,KAAK,CAAChB,SAAzC,EAAoDgB,KAAK,CAACd,SAA1D,CAAP;AACD,SAFc,CAAf;;AAIA,QAAA,MAAI,CAACe,QAAL,CAAc;AACZ,mBAASN;AADG,SAAd;AAGD,OAbH,EAaK;AAbL,OAcGO,KAdH,CAcS,UAACC,KAAD,EAAW;AAChBC,QAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACA,eAAOG,OAAO,CAACC,MAAR,CAAeJ,KAAf,CAAP;AACD,OAjBH;AAkBD;;;6BAEQ;AACP,UAAMK,OAAO,GAAG,KAAKlB,KAAL,CAAWmB,KAAX,CAAiBV,GAAjB,CAAqB,UAACC,KAAD,EAAW;AAC9C,eACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAKA,KAAK,CAACjB,EAAX,CADF;AAGD,OAJe,CAAhB;AAKA,aACE;AAAK,QAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACGyB,OADH,CAFF,CADF;AAQD;;;;EA5CsB7B,S;;AA+CzB,eAAeS,UAAf","sourcesContent":["import React, { Component } from 'react';\nimport './styles/AvatarList.css';\n\nconst STARTING_REPO = 999;\n\nclass User {\n  constructor(username, id, avatarURL, followersURL) {\n    this.username = username;\n    this.id = id;\n    this.avatarURL = avatarURL;\n    this.followersURL = followersURL;\n\n    /* Set explicitly to 'undefined' because we don't know whether they do or don't exist\n     * for this user yet. */\n    this.followers = undefined;\n  }\n}\n\nclass AvatarList extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      'users': [],\n    };\n  }\n\n  componentDidMount() {\n    fetch(`http://localhost:3000/repos?since=${STARTING_REPO}`)\n      .then((response) => {\n        return response.json();\n      })\n      .then((response) => {\n        // console.log(response);\n        let newUsers = JSON.parse(JSON.stringify(response)).map((value) => {\n          return new User(value.username, value.id, value.avatarURL, value.followers);\n        });\n\n        this.setState({\n          'users': newUsers,\n        });\n      }) // .bind(this))\n      .catch((error) => {\n        console.log(error);\n        return Promise.reject(error);\n      });\n  }\n\n  render() {\n    const avatars = this.state.users.map((value) => {\n      return (\n        <li>{value.id}</li>\n      );\n    });\n    return (\n      <div className='avatarList'>\n        <p>AvatarList</p>\n        <ul>\n          {avatars}\n        </ul>\n      </div>\n    );\n  }\n}\n\nexport default AvatarList;\n"]},"metadata":{},"sourceType":"module"}