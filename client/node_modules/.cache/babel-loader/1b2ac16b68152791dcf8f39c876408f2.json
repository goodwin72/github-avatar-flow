{"ast":null,"code":"import _classCallCheck from \"C:\\\\Users\\\\Jared\\\\Documents\\\\Web\\\\GitHub Avatar Flow\\\\github-avatar-flow\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\Jared\\\\Documents\\\\Web\\\\GitHub Avatar Flow\\\\github-avatar-flow\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\Users\\\\Jared\\\\Documents\\\\Web\\\\GitHub Avatar Flow\\\\github-avatar-flow\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\Users\\\\Jared\\\\Documents\\\\Web\\\\GitHub Avatar Flow\\\\github-avatar-flow\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\Users\\\\Jared\\\\Documents\\\\Web\\\\GitHub Avatar Flow\\\\github-avatar-flow\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"C:\\\\Users\\\\Jared\\\\Documents\\\\Web\\\\GitHub Avatar Flow\\\\github-avatar-flow\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"C:\\\\Users\\\\Jared\\\\Documents\\\\Web\\\\GitHub Avatar Flow\\\\github-avatar-flow\\\\client\\\\src\\\\Avatar.js\";\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport jQuery from 'jquery';\nimport Popper from 'popper.js';\nimport BaseURLs from './BaseURLs';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './styles/Avatar.css';\n\nvar Avatar =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Avatar, _Component);\n\n  function Avatar(props) {\n    var _this;\n\n    _classCallCheck(this, Avatar);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Avatar).call(this, props));\n    _this.state = {\n      'followers': [],\n      'networkError': false\n    };\n    _this.displayFollowersPopover = _this.displayFollowersPopover.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.removeFollowersPopover = _this.removeFollowersPopover.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  }\n\n  _createClass(Avatar, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      jQuery('[data-toggle=\"popover\"]').popover();\n    }\n  }, {\n    key: \"displayFollowersPopover\",\n    value: function displayFollowersPopover(e) {\n      var _this2 = this;\n\n      e.persist();\n      var temp = e.target;\n      fetch(\"\".concat(BaseURLs.followers).concat(this.props.login)).then(function (response) {\n        return response.json();\n      }).then(function (response) {\n        // console.log(JSON.parse(JSON.stringify(response)));\n        _this2.setState({\n          'followers': response,\n          'networkError': false\n        }, function () {\n          jQuery(temp).popover('show');\n        });\n      }).catch(function (error) {\n        console.log(error);\n\n        _this2.setState({\n          'networkError': true\n        });\n      });\n    }\n  }, {\n    key: \"removeFollowersPopover\",\n    value: function removeFollowersPopover(e) {\n      jQuery(e.target).popover('hide');\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      // Bootstrap's data-content attribute will only accept HTML as a string, so\n      //  we need to convert the followers list into a string-ified HTML list\n      var followerDisplayString = '';\n      this.state.followers.forEach(function (value) {\n        followerDisplayString += \"<li>\".concat(value.login, \"</li>\");\n      }); // Extra classes conditionally applied to the img\n\n      var classes = []; // This will have the onHover callback for Avatars with logins that start\n      //  with 'a' or 'A' - otherwise, this will be empty.\n\n      var handleMouseEnter;\n      var handleMouseLeave;\n\n      if (this.props.login.substring(0, 1) === 'a') {\n        classes.push('avatar__img--highlighted');\n        handleMouseEnter = this.displayFollowersPopover;\n        handleMouseLeave = this.removeFollowersPopover;\n      }\n\n      var popOverContent;\n\n      if (!this.state.networkError) {\n        popOverContent = \"<ul class=\\\"popoverFollowers\\\">\".concat(followerDisplayString, \"</ul>\");\n      } else {\n        popOverContent = 'A network error occurred';\n      }\n\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 86\n        },\n        __self: this\n      }, React.createElement(\"img\", {\n        className: \"img-fluid \".concat(classes.join(' ')),\n        src: this.props.avatarURL,\n        alt: \"\".concat(this.props.login, \"'s avatar\"),\n        \"data-html\": \"true\",\n        onMouseEnter: handleMouseEnter,\n        onMouseLeave: handleMouseLeave,\n        \"data-toggle\": \"popover\",\n        \"data-trigger\": \"none\",\n        title: this.props.login,\n        \"data-content\": popOverContent,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 87\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return Avatar;\n}(Component);\n\nAvatar.propTypes = {\n  'avatarURL': PropTypes.string.isRequired,\n  'login': PropTypes.string.isRequired\n};\nexport default Avatar;","map":{"version":3,"sources":["C:\\Users\\Jared\\Documents\\Web\\GitHub Avatar Flow\\github-avatar-flow\\client\\src\\Avatar.js"],"names":["React","Component","PropTypes","jQuery","Popper","BaseURLs","Avatar","props","state","displayFollowersPopover","bind","removeFollowersPopover","popover","e","persist","temp","target","fetch","followers","login","then","response","json","setState","catch","error","console","log","followerDisplayString","forEach","value","classes","handleMouseEnter","handleMouseLeave","substring","push","popOverContent","networkError","join","avatarURL","propTypes","string","isRequired"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport jQuery from 'jquery';\nimport Popper from 'popper.js';\nimport BaseURLs from './BaseURLs';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './styles/Avatar.css';\n\nclass Avatar extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      'followers': [],\n      'networkError': false,\n    };\n\n    this.displayFollowersPopover = this.displayFollowersPopover.bind(this);\n    this.removeFollowersPopover = this.removeFollowersPopover.bind(this);\n  }\n\n  componentDidMount() {\n    jQuery('[data-toggle=\"popover\"]').popover();\n  }\n\n  displayFollowersPopover(e) {\n    e.persist();\n    let temp = e.target;\n\n    fetch(`${BaseURLs.followers}${this.props.login}`)\n      .then((response) => {\n        return response.json();\n      })\n      .then((response) => {\n        // console.log(JSON.parse(JSON.stringify(response)));\n\n        this.setState({\n          'followers': response,\n          'networkError': false,\n        }, () => {\n          jQuery(temp).popover('show');\n        });\n      })\n      .catch((error) => {\n        console.log(error);\n        this.setState({\n          'networkError': true,\n        });\n      });\n  }\n\n  removeFollowersPopover(e) {\n    jQuery(e.target).popover('hide');\n  }\n\n  render() {\n    // Bootstrap's data-content attribute will only accept HTML as a string, so\n    //  we need to convert the followers list into a string-ified HTML list\n    let followerDisplayString = '';\n    this.state.followers.forEach((value) => {\n      followerDisplayString += `<li>${value.login}</li>`;\n    });\n\n    // Extra classes conditionally applied to the img\n    let classes = [];\n\n    // This will have the onHover callback for Avatars with logins that start\n    //  with 'a' or 'A' - otherwise, this will be empty.\n    let handleMouseEnter;\n    let handleMouseLeave;\n    if (this.props.login.substring(0, 1) === 'a') {\n      classes.push('avatar__img--highlighted');\n      handleMouseEnter = this.displayFollowersPopover;\n      handleMouseLeave = this.removeFollowersPopover;\n    }\n\n    let popOverContent;\n    if (!this.state.networkError) {\n      popOverContent = `<ul class=\"popoverFollowers\">${followerDisplayString}</ul>`;\n    }\n    else {\n      popOverContent = 'A network error occurred';\n    }\n\n    return (\n      <div>\n        <img\n          className={`img-fluid ${classes.join(' ')}`}\n          src={this.props.avatarURL}\n          alt={`${this.props.login}'s avatar`}\n          data-html='true'\n          onMouseEnter={handleMouseEnter}\n          onMouseLeave={handleMouseLeave}\n          data-toggle='popover'\n          data-trigger='none'\n          title={this.props.login}\n          data-content={popOverContent}\n        />\n      </div>\n    );\n  }\n}\n\nAvatar.propTypes = {\n  'avatarURL': PropTypes.string.isRequired,\n  'login': PropTypes.string.isRequired,\n};\n\nexport default Avatar;\n"]},"metadata":{},"sourceType":"module"}