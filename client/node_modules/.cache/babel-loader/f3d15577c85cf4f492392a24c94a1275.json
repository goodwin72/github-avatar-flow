{"ast":null,"code":"import _createClass from \"C:\\\\Users\\\\Jared\\\\Documents\\\\Web\\\\GitHub Avatar Flow\\\\github-avatar-flow\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\Users\\\\Jared\\\\Documents\\\\Web\\\\GitHub Avatar Flow\\\\github-avatar-flow\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\Users\\\\Jared\\\\Documents\\\\Web\\\\GitHub Avatar Flow\\\\github-avatar-flow\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\Users\\\\Jared\\\\Documents\\\\Web\\\\GitHub Avatar Flow\\\\github-avatar-flow\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"C:\\\\Users\\\\Jared\\\\Documents\\\\Web\\\\GitHub Avatar Flow\\\\github-avatar-flow\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/assertThisInitialized\";\nimport _classCallCheck from \"C:\\\\Users\\\\Jared\\\\Documents\\\\Web\\\\GitHub Avatar Flow\\\\github-avatar-flow\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nvar _jsxFileName = \"C:\\\\Users\\\\Jared\\\\Documents\\\\Web\\\\GitHub Avatar Flow\\\\github-avatar-flow\\\\client\\\\src\\\\AvatarList.js\";\nimport React, { Component } from 'react';\nimport Avatar from './Avatar';\nimport BaseURLs from './BaseURLs';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './styles/AvatarList.css';\nvar STARTING_REPO = 999;\n\nvar User = function User(login, id, avatarURL) {\n  _classCallCheck(this, User);\n\n  this.login = login;\n  this.id = id;\n  this.avatarURL = avatarURL;\n  /* Set explicitly to 'undefined' because we don't know whether they do or don't exist\n   * for this user yet. */\n\n  this.followers = undefined;\n};\n\nvar AvatarList =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(AvatarList, _Component);\n\n  function AvatarList(props) {\n    var _this;\n\n    _classCallCheck(this, AvatarList);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(AvatarList).call(this, props));\n    _this.state = {\n      'users': [],\n      'reposRead': 0,\n      'loading': true,\n      'networkError': false\n    };\n    _this.getNextUsersPage = _this.getNextUsersPage.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  }\n\n  _createClass(AvatarList, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.getNextUsersPage();\n    }\n  }, {\n    key: \"getNextUsersPage\",\n    value: function getNextUsersPage() {\n      var _this2 = this;\n\n      var startingRepo = STARTING_REPO;\n\n      if (this.state.reposRead > 0) {\n        startingRepo = STARTING_REPO + this.state.reposRead;\n      }\n\n      console.log(\"StaringRepo:\", startingRepo);\n      fetch(\"\".concat(BaseURLs.repos).concat(startingRepo)).then(function (response) {\n        return response.json();\n      }).then(function (response) {\n        console.log(\"RESPONSE\", response);\n        return JSON.parse(JSON.stringify(response)).map(function (value) {\n          return new User(value.login, value.id, value.avatar_url);\n        });\n      }).then(function (responseUsers) {\n        console.log(\"Response users: \", responseUsers); // slice(0) creates a new array instead of copying a reference\n\n        var newUsers = _this2.removeDuplicateUsers(responseUsers);\n\n        var newReposRead = _this2.state.reposRead + responseUsers.length;\n\n        _this2.setState({\n          'users': newUsers,\n          'reposRead': newReposRead,\n          'loading': false,\n          'networkError': false\n        });\n      }).catch(function (error) {\n        console.log(error);\n\n        _this2.setState({\n          'loading': false,\n          'networkError': true\n        });\n      });\n    }\n  }, {\n    key: \"removeDuplicateUsers\",\n    value: function removeDuplicateUsers(users) {\n      console.log('Prior to filter: ', users);\n      var filteredUsers = [];\n\n      for (var currentUser = 0; currentUser < users.length; currentUser += 1) {\n        var foundDuplicate = false;\n\n        for (var previousUser = 0; previousUser < currentUser; previousUser += 1) {\n          if (users[currentUser].id === users[previousUser].id) {\n            foundDuplicate = true;\n          }\n        }\n\n        if (!foundDuplicate) {\n          filteredUsers.push(users[currentUser]);\n        }\n      }\n\n      console.log('After filter: ', filteredUsers);\n      return filteredUsers;\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var avatars = this.state.users.map(function (value) {\n        return React.createElement(\"li\", {\n          className: \"avatar__li\",\n          key: value.id,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 103\n          },\n          __self: this\n        }, React.createElement(Avatar, {\n          avatarURL: value.avatarURL,\n          login: value.login,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 104\n          },\n          __self: this\n        }));\n      });\n      var loading;\n      var loadMoreButton;\n\n      if (this.state.loading) {\n        loading = React.createElement(\"p\", {\n          className: \"alert alert-primary\",\n          role: \"alert\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 112\n          },\n          __self: this\n        }, \"Loading...\");\n      } else {\n        loadMoreButton = React.createElement(\"button\", {\n          type: \"button\",\n          onClick: this.getNextUsersPage,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 114\n          },\n          __self: this\n        }, \"Load more\");\n      }\n\n      if (this.state.networkError) {\n        loading = React.createElement(\"p\", {\n          className: \"alert alert-danger\",\n          role: \"alert\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 118\n          },\n          __self: this\n        }, \"Failed to load from the GitHub API!\");\n      }\n\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 122\n        },\n        __self: this\n      }, React.createElement(\"ul\", {\n        className: \"d-flex flex-wrap list-unstyled\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 123\n        },\n        __self: this\n      }, avatars), loading, loadMoreButton);\n    }\n  }]);\n\n  return AvatarList;\n}(Component);\n\nexport default AvatarList;","map":{"version":3,"sources":["C:\\Users\\Jared\\Documents\\Web\\GitHub Avatar Flow\\github-avatar-flow\\client\\src\\AvatarList.js"],"names":["React","Component","Avatar","BaseURLs","STARTING_REPO","User","login","id","avatarURL","followers","undefined","AvatarList","props","state","getNextUsersPage","bind","startingRepo","reposRead","console","log","fetch","repos","then","response","json","JSON","parse","stringify","map","value","avatar_url","responseUsers","newUsers","removeDuplicateUsers","newReposRead","length","setState","catch","error","users","filteredUsers","currentUser","foundDuplicate","previousUser","push","avatars","loading","loadMoreButton","networkError"],"mappings":";;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,MAAP,MAAmB,UAAnB;AACA,OAAOC,QAAP,MAAqB,YAArB;AACA,OAAO,sCAAP;AACA,OAAO,yBAAP;AAEA,IAAMC,aAAa,GAAG,GAAtB;;IAEMC,I,GACJ,cAAYC,KAAZ,EAAmBC,EAAnB,EAAuBC,SAAvB,EAAkC;AAAA;;AAChC,OAAKF,KAAL,GAAaA,KAAb;AACA,OAAKC,EAAL,GAAUA,EAAV;AACA,OAAKC,SAAL,GAAiBA,SAAjB;AAEA;;;AAEA,OAAKC,SAAL,GAAiBC,SAAjB;AACD,C;;IAGGC,U;;;;;AACJ,sBAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACjB,oFAAMA,KAAN;AAEA,UAAKC,KAAL,GAAa;AACX,eAAS,EADE;AAEX,mBAAa,CAFF;AAGX,iBAAW,IAHA;AAIX,sBAAgB;AAJL,KAAb;AAOA,UAAKC,gBAAL,GAAwB,MAAKA,gBAAL,CAAsBC,IAAtB,uDAAxB;AAViB;AAWlB;;;;wCAEmB;AAClB,WAAKD,gBAAL;AACD;;;uCAEkB;AAAA;;AACjB,UAAIE,YAAY,GAAGZ,aAAnB;;AACA,UAAI,KAAKS,KAAL,CAAWI,SAAX,GAAuB,CAA3B,EAA8B;AAC5BD,QAAAA,YAAY,GAAGZ,aAAa,GAAG,KAAKS,KAAL,CAAWI,SAA1C;AACD;;AACDC,MAAAA,OAAO,CAACC,GAAR,CAAY,cAAZ,EAA4BH,YAA5B;AAEAI,MAAAA,KAAK,WAAIjB,QAAQ,CAACkB,KAAb,SAAqBL,YAArB,EAAL,CACGM,IADH,CACQ,UAACC,QAAD,EAAc;AAClB,eAAOA,QAAQ,CAACC,IAAT,EAAP;AACD,OAHH,EAIGF,IAJH,CAIQ,UAACC,QAAD,EAAc;AAClBL,QAAAA,OAAO,CAACC,GAAR,CAAY,UAAZ,EAAwBI,QAAxB;AACA,eAAOE,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,SAAL,CAAeJ,QAAf,CAAX,EAAqCK,GAArC,CAAyC,UAACC,KAAD,EAAW;AACzD,iBAAO,IAAIxB,IAAJ,CAASwB,KAAK,CAACvB,KAAf,EAAsBuB,KAAK,CAACtB,EAA5B,EAAgCsB,KAAK,CAACC,UAAtC,CAAP;AACD,SAFM,CAAP;AAGD,OATH,EAUGR,IAVH,CAUQ,UAACS,aAAD,EAAmB;AACvBb,QAAAA,OAAO,CAACC,GAAR,CAAY,kBAAZ,EAAgCY,aAAhC,EADuB,CAGvB;;AACA,YAAIC,QAAQ,GAAG,MAAI,CAACC,oBAAL,CAA0BF,aAA1B,CAAf;;AACA,YAAIG,YAAY,GAAG,MAAI,CAACrB,KAAL,CAAWI,SAAX,GAAuBc,aAAa,CAACI,MAAxD;;AAEA,QAAA,MAAI,CAACC,QAAL,CAAc;AACZ,mBAASJ,QADG;AAEZ,uBAAaE,YAFD;AAGZ,qBAAW,KAHC;AAIZ,0BAAgB;AAJJ,SAAd;AAMD,OAvBH,EAwBGG,KAxBH,CAwBS,UAACC,KAAD,EAAW;AAChBpB,QAAAA,OAAO,CAACC,GAAR,CAAYmB,KAAZ;;AACA,QAAA,MAAI,CAACF,QAAL,CAAc;AACZ,qBAAW,KADC;AAEZ,0BAAgB;AAFJ,SAAd;AAID,OA9BH;AA+BD;;;yCAEoBG,K,EAAO;AAC1BrB,MAAAA,OAAO,CAACC,GAAR,CAAY,mBAAZ,EAAiCoB,KAAjC;AACA,UAAIC,aAAa,GAAG,EAApB;;AAEA,WAAK,IAAIC,WAAW,GAAG,CAAvB,EAA0BA,WAAW,GAAGF,KAAK,CAACJ,MAA9C,EAAsDM,WAAW,IAAI,CAArE,EAAwE;AACtE,YAAIC,cAAc,GAAG,KAArB;;AACA,aAAK,IAAIC,YAAY,GAAG,CAAxB,EAA2BA,YAAY,GAAGF,WAA1C,EAAuDE,YAAY,IAAI,CAAvE,EAA0E;AACxE,cAAIJ,KAAK,CAACE,WAAD,CAAL,CAAmBlC,EAAnB,KAA0BgC,KAAK,CAACI,YAAD,CAAL,CAAoBpC,EAAlD,EAAsD;AACpDmC,YAAAA,cAAc,GAAG,IAAjB;AACD;AACF;;AAED,YAAI,CAACA,cAAL,EAAqB;AACnBF,UAAAA,aAAa,CAACI,IAAd,CAAmBL,KAAK,CAACE,WAAD,CAAxB;AACD;AACF;;AACDvB,MAAAA,OAAO,CAACC,GAAR,CAAY,gBAAZ,EAA8BqB,aAA9B;AAEA,aAAOA,aAAP;AACD;;;6BAEQ;AACP,UAAMK,OAAO,GAAG,KAAKhC,KAAL,CAAW0B,KAAX,CAAiBX,GAAjB,CAAqB,UAACC,KAAD,EAAW;AAC9C,eACE;AAAI,UAAA,SAAS,EAAC,YAAd;AAA2B,UAAA,GAAG,EAAEA,KAAK,CAACtB,EAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACE,oBAAC,MAAD;AAAQ,UAAA,SAAS,EAAEsB,KAAK,CAACrB,SAAzB;AAAoC,UAAA,KAAK,EAAEqB,KAAK,CAACvB,KAAjD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADF,CADF;AAKD,OANe,CAAhB;AAQA,UAAIwC,OAAJ;AACA,UAAIC,cAAJ;;AACA,UAAI,KAAKlC,KAAL,CAAWiC,OAAf,EAAwB;AACtBA,QAAAA,OAAO,GAAG;AAAG,UAAA,SAAS,EAAC,qBAAb;AAAmC,UAAA,IAAI,EAAC,OAAxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBAAV;AACD,OAFD,MAEO;AACLC,QAAAA,cAAc,GAAG;AAAQ,UAAA,IAAI,EAAC,QAAb;AAAsB,UAAA,OAAO,EAAE,KAAKjC,gBAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBAAjB;AACD;;AAED,UAAI,KAAKD,KAAL,CAAWmC,YAAf,EAA6B;AAC3BF,QAAAA,OAAO,GAAG;AAAG,UAAA,SAAS,EAAC,oBAAb;AAAkC,UAAA,IAAI,EAAC,OAAvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iDAAV;AACD;;AAED,aACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAI,QAAA,SAAS,EAAC,gCAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACGD,OADH,CADF,EAIGC,OAJH,EAKGC,cALH,CADF;AASD;;;;EA7GsB9C,S;;AAgHzB,eAAeU,UAAf","sourcesContent":["import React, { Component } from 'react';\nimport Avatar from './Avatar';\nimport BaseURLs from './BaseURLs';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './styles/AvatarList.css';\n\nconst STARTING_REPO = 999;\n\nclass User {\n  constructor(login, id, avatarURL) {\n    this.login = login;\n    this.id = id;\n    this.avatarURL = avatarURL;\n\n    /* Set explicitly to 'undefined' because we don't know whether they do or don't exist\n     * for this user yet. */\n    this.followers = undefined;\n  }\n}\n\nclass AvatarList extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      'users': [],\n      'reposRead': 0,\n      'loading': true,\n      'networkError': false,\n    };\n\n    this.getNextUsersPage = this.getNextUsersPage.bind(this);\n  }\n\n  componentDidMount() {\n    this.getNextUsersPage();\n  }\n\n  getNextUsersPage() {\n    let startingRepo = STARTING_REPO;\n    if (this.state.reposRead > 0) {\n      startingRepo = STARTING_REPO + this.state.reposRead;\n    }\n    console.log(\"StaringRepo:\", startingRepo);\n\n    fetch(`${BaseURLs.repos}${startingRepo}`)\n      .then((response) => {\n        return response.json();\n      })\n      .then((response) => {\n        console.log(\"RESPONSE\", response);\n        return JSON.parse(JSON.stringify(response)).map((value) => {\n          return new User(value.login, value.id, value.avatar_url);\n        });\n      })\n      .then((responseUsers) => {\n        console.log(\"Response users: \", responseUsers);\n\n        // slice(0) creates a new array instead of copying a reference\n        let newUsers = this.removeDuplicateUsers(responseUsers);\n        let newReposRead = this.state.reposRead + responseUsers.length;\n\n        this.setState({\n          'users': newUsers,\n          'reposRead': newReposRead,\n          'loading': false,\n          'networkError': false,\n        });\n      })\n      .catch((error) => {\n        console.log(error);\n        this.setState({\n          'loading': false,\n          'networkError': true,\n        });\n      });\n  }\n\n  removeDuplicateUsers(users) {\n    console.log('Prior to filter: ', users);\n    let filteredUsers = [];\n\n    for (let currentUser = 0; currentUser < users.length; currentUser += 1) {\n      let foundDuplicate = false;\n      for (let previousUser = 0; previousUser < currentUser; previousUser += 1) {\n        if (users[currentUser].id === users[previousUser].id) {\n          foundDuplicate = true;\n        }\n      }\n\n      if (!foundDuplicate) {\n        filteredUsers.push(users[currentUser]);\n      }\n    }\n    console.log('After filter: ', filteredUsers);\n\n    return filteredUsers;\n  }\n\n  render() {\n    const avatars = this.state.users.map((value) => {\n      return (\n        <li className='avatar__li' key={value.id}>\n          <Avatar avatarURL={value.avatarURL} login={value.login} />\n        </li>\n      );\n    });\n\n    let loading;\n    let loadMoreButton;\n    if (this.state.loading) {\n      loading = <p className='alert alert-primary' role='alert'>Loading...</p>;\n    } else {\n      loadMoreButton = <button type='button' onClick={this.getNextUsersPage}>Load more</button>;\n    }\n\n    if (this.state.networkError) {\n      loading = <p className='alert alert-danger' role='alert'>Failed to load from the GitHub API!</p>;\n    }\n\n    return (\n      <div>\n        <ul className='d-flex flex-wrap list-unstyled'>\n          {avatars}\n        </ul>\n        {loading}\n        {loadMoreButton}\n      </div>\n    );\n  }\n}\n\nexport default AvatarList;\n"]},"metadata":{},"sourceType":"module"}